{"ast":null,"code":"var _jsxFileName = \"/home/sanji/lighthouse/React-Redux-tutorial/learn-redux/src/App.js\";\nimport React from 'react';\nimport { createStore } from 'redux'; //Store - Globalised state\n//Action - Increment\n\nconst increment = () => {\n  return {\n    type: 'INCREMENT'\n  };\n};\n\nconst decrement = () => {\n  return {\n    type: 'DECREMENT'\n  };\n}; //Reducer\n\n\nconst counter = (state = 0, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return state + 1;\n\n    case \"DECREMENT\":\n      return state - 1;\n  }\n};\n\nlet store = createStore(counter); //Dispatch in the console \n\nstore.subscribe(() => console.log(store.getState())); //Dispatch\n\nstore.dispatch(increment());\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sanji/lighthouse/React-Redux-tutorial/learn-redux/src/App.js"],"names":["React","createStore","increment","type","decrement","counter","state","action","store","subscribe","console","log","getState","dispatch","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,OAA1B,C,CAEA;AAEA;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAID,CALD;;AAOA,MAAMC,SAAS,GAAG,MAAM;AACtB,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAID,CALD,C,CAOA;;;AAEA,MAAME,OAAO,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AACrC,UAAOA,MAAM,CAACJ,IAAd;AACE,SAAK,WAAL;AACE,aAAOG,KAAK,GAAG,CAAf;;AACF,SAAK,WAAL;AACE,aAAOA,KAAK,GAAG,CAAf;AAJJ;AAOD,CARD;;AAUA,IAAIE,KAAK,GAAGP,WAAW,CAACI,OAAD,CAAvB,C,CAEA;;AAEAG,KAAK,CAACC,SAAN,CAAgB,MAAMC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ,CAAtB,E,CAEA;;AAEAJ,KAAK,CAACK,QAAN,CAAeX,SAAS,EAAxB;;AAEA,SAASY,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAID;;AAED,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport {createStore} from 'redux';\n\n//Store - Globalised state\n\n//Action - Increment\n\nconst increment = () => {\n  return {\n    type: 'INCREMENT',\n\n  }\n}\n\nconst decrement = () => {\n  return {\n    type: 'DECREMENT',\n\n  }\n}\n\n//Reducer\n\nconst counter = (state = 0, action) => {\n  switch(action.type){\n    case \"INCREMENT\":\n      return state + 1;\n    case \"DECREMENT\":\n      return state - 1;\n      \n  }\n}\n\nlet store = createStore(counter)\n\n//Dispatch in the console \n\nstore.subscribe(() => console.log(store.getState()))\n\n//Dispatch\n\nstore.dispatch(increment())\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}